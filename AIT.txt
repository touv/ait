// ----------------------------------------------------------------------------
getPDO
^^^^^^

Synopsis
++++++++

    PDO  getPDO()

Description
+++++++++++

Retourne l'objet PDOAIT utilisé dans l'objet

Paramètres
++++++++++

Aucun.

Retour
++++++

Un objet PDO 

// ----------------------------------------------------------------------------
ren
^^^

Synopsis
++++++++

    void ren(string $l)

Description
+++++++++++

Renomme l'élément. Cela revient à changer son label.

Paramètres
++++++++++

string *$l*:: nouveau label 


Retour
++++++

NULL.


// ----------------------------------------------------------------------------
exists
^^^^^^

Synopsis
++++++++

    boolean exists()

Description
+++++++++++

Vérifie l'existence de l'élément 

Paramètres
++++++++++

Aucun.

Retour
++++++

TRUE ou FALSE en focntion de l'existence de l'élément

// ----------------------------------------------------------------------------
getSystemID
^^^^^^^^^^^

Synopsis
++++++++

    integer  getSystemID()

Description
+++++++++++

Retourne l'identifiant système de l'élément.

Paramètres
++++++++++

Aucun.

Retour
++++++

Un nombre entier représentant l'identifiant système.

[source]
-------------------------------------------------
include::./examples/AIT-getSystemID.php[]
-------------------------------------------------


// ----------------------------------------------------------------------------
get
^^^

Synopsis
++++++++

    mixed  get(string $name= 'label')

Description
+++++++++++

Retourne la valeur d'une propriété de l'élément. 
Les propriétés accessibles sont : type, label, buffer, prefix, suffix 

Paramètres
++++++++++

string *$name*:: nom de la propriété


Retour
++++++

mixed 

// ----------------------------------------------------------------------------
set
^^^

Synopsis
++++++++

    mixed  set(string $value, string $name= 'label')

Description
+++++++++++

Fixe la valeur d'une propriété de l'élément. 
Les propriétés accessibles sont : type, label, buffer, prefix, suffix 

Paramètres
++++++++++

string *$value*:: valeur de la propriété
string *$name*:: nom de la propriété


Retour
++++++

Aucun.


// ----------------------------------------------------------------------------
search
^^^^^^

Synopsis
++++++++

    AITResult search(mixed $query, integer $offset=null, integer $lines=null, integer $ordering=null)

Description
+++++++++++

Recherche des éléments (quelque soit le type)

Paramètres
++++++++++

string *$query*:: requete (le format peut varier en fonction de la callback) sans callback c'est une chaine de caractères contenant du SQL 
integer *$offset*:: décalage à partir du premier enregistrement 
integer *$lines*:: nombre de lignes à retourner 
integer *$ordering*:: flag permettant le tri


Retour
++++++

un objet AITResult (ArrayObject) contenant des objets AIT_Tag ou AIT_Item ou AIT_TagType ou AIT_ItemType.

// ----------------------------------------------------------------------------
getTimestamps
^^^^^^^^^^^^^

Synopsis
++++++++

    ArrayObject  getTimestamps()

Description
+++++++++++

Retourne la date de dernière modification et la date de création de l'élément.
les différents "temps" enregistré pour l'élément

Paramètres
++++++++++

Aucun.

Retour
++++++

Un objet ArrayObject dont le premier item contient la date de modification 
et le deuxième contient la date de création.

Exemple
+++++++

[source]
-------------------------------------------------
include::./examples/AIT-getTimestamps.php[]
-------------------------------------------------


// ----------------------------------------------------------------------------
getScore
^^^^^^^^

Synopsis
++++++++

    integer  getScore()

Description
+++++++++++

Retourne le score de l'élément

Paramètres
++++++++++

Aucun.

Retour
++++++

Un entier représentant le score l'élément.

// ----------------------------------------------------------------------------
setScore
^^^^^^^^

Synopsis
++++++++

    void setScore($i)

Description
+++++++++++

Donne un score à  l'élément

Paramètres
++++++++++

integer *$i*:: Un entier représentant le score l'élément.


Retour
++++++

NULL.


// ----------------------------------------------------------------------------
setFrequency
^^^^^^^^^^^^

Synopsis
++++++++

    void setFrequency($i)

Description
+++++++++++

Donne une fréquence à l'élément

Paramètres
++++++++++

integer *$i*:: Un entier représentant la fréquence de l'élément


Retour
++++++

NULL.


// ----------------------------------------------------------------------------
debug
^^^^^

Synopsis
++++++++

    void debug()

Description
+++++++++++

DEBUG 

Paramètres
++++++++++

Aucun.

Retour
++++++

NULL.


// ----------------------------------------------------------------------------
dump
^^^^

Synopsis
++++++++

    mixed dump(string $s = '', boolean $r = false)

Description
+++++++++++

Afficher le contenu de l'objet.
Si $r est TRUE. Alors le contenu de l'objet précédé éventuellement
de $s seront affichée entouré des <pre> et </pre>

Paramètres
++++++++++

string *$s*:: chaine de carat cure à afficher avant le contenu de l'objet.
booelan *$r*:: si vrai a retourne la chaine à afficher plutôt que de l'afficher 

Retour
++++++

Retourne NULL ou une chaine de caractères (dépend du paramètre $r).


// ----------------------------------------------------------------------------
getBySystemID
^^^^^^^^^^^^^

Synopsis
++++++++

    mixed AIT::getBySystemID(PDOAIT $pdo, $id)

Description
+++++++++++

Créé l'objet correspondant à un identifiant système

Paramètres
++++++++++

PDOAIT *$pdo*:: pointeur sur la base de données
integer *$id*:: identifiant systéme

Retour
++++++

Retourne NULL ou une instance d'objet (AIT_ItemType, AIT_Item, AIT_TagType, AIT_Tag)

Exemple
+++++++

[source]
-------------------------------------------------
include::./examples/AIT-getBySystemID.php[]
-------------------------------------------------


// vim: set syntax=asciidoc encoding=utf8 spl=fr:
