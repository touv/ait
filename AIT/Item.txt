// ----------------------------------------------------------------------------
__construct
^^^^^^^^^^^

Synopsis
++++++++

    void __construct(string $l, integer $t, PDOAIT $pdo, integer $id=false)

Description
+++++++++++

Constructeur

Paramètres
++++++++++

string *$l*:: nom du nouveau item
integer *$t*:: Identifiant système du type d'item associé (si connu)
PDOAIT *$pdo*:: Instance de base AIT que l'on souhaite utiliser. 
integer *$id*:: Identifiant système de l'élément (si déjà connu). 

// ----------------------------------------------------------------------------
defTag
^^^^^^^^^^

Synopsis
++++++++

    AIT_Tag defTag(string $l, AIT_TagType $o)

Description
+++++++++++

Retourne un tag associé à l'item courant. 
Si le Tag n'existe pas il est automatiquement créé.

Paramètres
++++++++++

string *$l*:: nom du tag 
AIT_TagType *$o*:: Type de Tag


Retour
++++++

Un objet AIT_Tag représentant le tag.


// ----------------------------------------------------------------------------
getTag
^^^^^^

Synopsis
++++++++

    AIT_Tag getTag(string $l, AIT_TagType $o)

Description
+++++++++++

Retourne un tag associé à l'item courant (si il existe)

Paramètres
++++++++++

string *$l*:: nom du tag 
AIT_TagType *$o*:: Type de Tag


Retour
++++++

Un objet AIT_Tag représentant le tag trouvé ou NULL si il n'existe pas.


// ----------------------------------------------------------------------------
addTag
^^^^^^

Synopsis
++++++++

    AIT_Tag addTag(string $l, AIT_TagType $o)

Description
+++++++++++

Ajout d'un tag à l'item courant

Paramètres
++++++++++

string *$l*:: nom du nouveau tag 
AIT_TagType *$o*:: Type de Tag


Retour
++++++

Un objet AIT_Tag représentant le nouveau tag.

// ----------------------------------------------------------------------------
delTag
^^^^^^

Synopsis
++++++++

    delTag(string $l, AIT_TagType $o)

Description
+++++++++++

Supprime un tag à l'item courant

Paramètres
++++++++++

string *$l*:: nom du nouveau tag 
AIT_TagType *$o*:: Type de Tag 


Retour
++++++

NULL.

// ----------------------------------------------------------------------------
attach
^^^^^^

Synopsis
++++++++

    AIT_Item attach(AIT_Tag $o)

Description
+++++++++++

Ajoute une association entre le tag et un item

Paramètres
++++++++++

AIT_Tag *$o*:: Tag


Retour
++++++

Retourne l'objet en lui-même. Ce qui permet d'enchainer les méthodes. 


// ----------------------------------------------------------------------------
detach
^^^^^^

Synopsis
++++++++

    AIT_Item detach(AIT_Tag $o)

Description
+++++++++++

Supprime une association entre le tag et un item

Paramètres
++++++++++

AIT_Tag *$o*:: Tag


Retour
++++++

Retourne l'objet en lui-même. Ce qui permet d'enchainer les méthodes. 

// ----------------------------------------------------------------------------
getTags
^^^^^^^

Synopsis
++++++++

    AITResult getTags(integer $offset=null, integer $lines=null, integer $ordering=null)

Description
+++++++++++

Retourne tous les tags de l'item courant

Paramètres
++++++++++

integer *$offset*:: décalage à partir du premier enregistrement 
integer *$lines*:: nombre de lignes à retourner 
integer *$ordering*:: flag permettant le tri


Retour
++++++

Un objet AITResult (ArrayObject) contenant des objets AIT_Tag.

// ----------------------------------------------------------------------------
getTypedTags
^^^^^^^^^^^^

Synopsis
++++++++

    AIT_Item::getTypedTags(AIT_TagType $typetag, $offset=null, $lines=null, $ordering=null)

Description
+++++++++++

Retourne tous les tags d'un certain type de l'item courant

Paramètres
++++++++++

AIT_TagType *$typetag*:: un type de tag 
integer *$offset*:: décalage à parir du premier enregistrement 
integer *$lines*:: nombre de lignes à retourner 
integer *$ordering*:: flag permettant le tri


Retour
++++++

Un objet AITResult (ArrayObject) contenant des objets AIT_Tag.

Exemple
+++++++

[source,php]
-------------------------------------------------
include::../examples/AIT_Item-getTypedTags.php[]
-------------------------------------------------


// ----------------------------------------------------------------------------
fetchTags
^^^^^^^^^

Synopsis
++++++++

   AITResult fetchTags(ArrayObject $tags, integer $offset=null, integer $lines=null, integer $ordering=null)

Description
+++++++++++

Retourne les tags possédant de un ou plusieurs tags donnés

Paramètres
++++++++++

ArrayObject *$tags*:: Tableau de type de tag 
integer *$offset*:: décalage à partir du premier enregistrement 
integer *$lines*:: nombre de lignes à retourner 
integer *$ordering*:: flag permettant le tri


Retour
++++++

Un objet AITResult (ArrayObject) contenant des objets AIT_Tag.


// ----------------------------------------------------------------------------
del
^^^

Synopsis
++++++++

    void del(boolean $cascade = false)

Description
+++++++++++

Suppression de l'élément. On peut également avec le paramètre $cascade supprimer les tags associés.


Paramètres
++++++++++

boolean *$cascade*:: permet une suppression en cascade

Retour
++++++

NULL.


// ----------------------------------------------------------------------------
getItemType
^^^^^^^^^^^

Synopsis
++++++++

    AIT_ItemType getItemType()

Description
+++++++++++

Retourne le type d'item associé à l'élément courant


Paramètres
++++++++++

Aucun.

Retour
++++++

Un objet AIT_ItemType représentant le type d'item associé.


// ----------------------------------------------------------------------------
getTagsObject
^^^^^^^^^^^^^

Synopsis
++++++++

    AITTagsObject getTagsObject()

Description
+++++++++++

Retourne tous les tags de l'élement courant sous forme d'un objet.

Paramètres
++++++++++

Aucun.

Retour
++++++

Un objet AITTagsObject représentant un ensemble de tag trié par type

Exemple
+++++++

[source,php]
-------------------------------------------------
include::../examples/AIT_Item-getTagsObject.php[]
-------------------------------------------------


include::../AIT.txt[]
// vim: set syntax=asciidoc encoding=utf8 spl=fr:
