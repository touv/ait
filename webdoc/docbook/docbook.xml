<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<book lang="fr">

	<bookinfo>
		<title>AIT</title>
		<date>2008-07-11</date>
		<author>
			<firstname>Nicolas</firstname>
			<surname>Thouvenin</surname>
		</author>
	</bookinfo>


	<chapter>
		<title>Introduction</title>

		<para>
			AIT est un ensemble de classes PHP permettant le stockage et
			la recherche de métadonnées. AIT se base sur 2 concepts
			: des items et des tags. A partir de là, on peut stocker et effectuer
			des recherches toutes informations formalisées sur ces 2 concepts.

			Concrètement AIT peut être considéré simplement comme un moteur de Tag
			(Tag's engine) en PHP, ou alors si on pousse le raisonnement à l'extrême,
			comme un moteur générique de stockage d'information.

		</para>

	</chapter>

	<chapter>
		<title>Installation</title>


			<para>
				AIT se présente sous forme forme d'un fichier AIT-X.Y.Z.tgz.
				Ce fichier s'installe de deux manières.
			</para>

			<section>
				<title>Avec PEAR</title>

				<procedure>
					<para>très simple avec la commande pear,</para>
					<step>
						<para>Pour installer : </para>
						<prompt>% </prompt><userinput>pear install AIT-X.Y.Z.tgz </userinput>
					</step>
					<step>
						<para>pour désinstaller :</para>
						<prompt>% </prompt><userinput>pear uninstall AIT </userinput>
					</step>
					<step>
						<para>pour mettre à jour :</para>
						<prompt>% </prompt><userinput>pear upgrade AIT-X.Y.Z.tgz</userinput>
					</step>
				</procedure>
			</section>

			<section>
				<title>sans PEAR</title>

				<para>
					Il suffit de décompresser l'archive dans un répertoire
					et d'ajuster la variable PHP include_path en focntion du
					répertoire que vous avez choisi.
				</para>
		</section>
	</chapter>

	<chapter>
		<title>Constantes pré-définies</title>
		<table>
			<title>Constantes AIT</title>
			<tgroup cols="3">
				<thead>
					<row>
						<entry>Constante</entry>
						<entry>Valeur</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>
							<constant>ORDER_ASC</constant>
							(integer)
						</entry>
						<entry>2</entry>
						<entry>Demande un tri ascendant </entry>
					</row>
					<row>
						<entry>
							<constant>ORDER_DESC</constant>
							(integer)
						</entry>
						<entry>4</entry>
						<entry>Demande un tri descendant</entry>
					</row>
					<row>
						<entry>
							<constant>ORDER_BY_LABEL</constant>
							(integer)
						</entry>
						<entry>8</entry>
						<entry>Demande un tri sur le label</entry>
					</row>
					<row>
						<entry>
							<constant>ORDER_BY_SCORE</constant>
							(integer)
						</entry>
						<entry>18</entry>
						<entry>Demande un tri sur le score</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
	</chapter>

	<chapter>
		<title>Connexion/Configuration à Base de Données</title>
		<section>
			<title>SGBD supportée</title>
			<para>
				AIT peut théoriquement focntionner sur tous les SGBD supprotés par l'extention PDO.
				En pratique AIT n'a été testé qu'avec MySQL.
			</para>
		</section>
		<section>
			<title>Pré-requis</title>
			<para>
				AIT a besoin qu'une base de données soit créée peu importe son nom.
			</para>
			<example>
				<title>Création d'une base de données avec Mysql</title>
				<programlisting>
						CREATE DATABASE AIT;
				</programlisting>
			</example>
		</section>
		<section>
			<title>Connexion à la base de donnée</title>
			<para>
				AIT utilise <ulink href="http://fr.php.net/pdo">l'extension php PDO</ulink>,
				pour se connecter à la base on utilise une chaîne de connexion PDO.
			</para>

			<para>
				La méthode connect prend les même paramètres que le
				<ulink href="http://fr.php.net/manual/fr/pdo.construct.php">constructeur de l'objet PDO </ulink>
			</para>
			<programlisting>
					<![CDATA[
$cnxstr = 'mysql:host=localhost;dbname=allistag';
$db = AIT::connect($cnxstr, 'root');
					]]>
			</programlisting>
		</section>
		<section>
			<title>Création et contrôle de la structure de données</title>
			<para>
				AIT contrôle et créé la structure de données nécessaire à son bon fonctionnement
				de manière automatique à condition de faire appel à la méthode checkup.
			</para>
				<programlisting>
					<![CDATA[
$cnxstr = 'mysql:host=localhost;dbname=allistag';
$db = AIT::connect($cnxstr, 'root');
$db->checkup();
					]]>
				</programlisting>
		</section>
	</chapter>


	<chapter>
		<title>Les erreurs et leur gestion</title>

		<para>
			AIT fait appel à la fonction PHP <ulink href="http://fr2.php.net/trigger_error">trigger_error</ulink>
			à chaque fois qu'une erreur est rencontrée. Le niveau d'erreur est toujours E_USER_ERROR.
			A chaque fois que AIT rencontre une erreur l'exectution du code est donc stoppé.
		</para>



	</chapter>

	<chapter>
		<title>Les classes de bases</title>
		<para>
			Le coeur d'AIT est composé de 4 classes de bases qui hérite d'une seul classe mère.
		</para>
		<section>
			<title>Types d'item</title>
			<!--
			<funcsynopsis>
				<funcsynopsisinfo>Ajoute une association entre le tag et un item</funcsynopsisinfo>
				<funcprototype>
					<funcdef>
						<function>AIT_Tag::attach</function>
					</funcdef>
					<paramdef>
						AIT_Item <parameter>$o</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			-->
			<classsynopsis>
				<ooclass><classname>AIT_Tag</classname></ooclass>
				<methodsynopsis>
					<type>AIT_Tag</type><methodname>AIT_Tag::attach</methodname>
					<methodparam><type>AIT_Item</type><parameter>object</parameter></methodparam>
				</methodsynopsis>
			</classsynopsis>
			<para>
				Ajoute une association entre le tag et un item
			</para>
		</section>
		<section>
			<title>Types de tag</title>
			<para>
			</para>
		</section>
		<section>
			<title>Item</title>
			<para>
			</para>
		</section>

		<section>
			<title>Tag</title>
			<para>
			</para>
		</section>
	</chapter>

	<chapter>
		<title>Les extentions</title>
	</chapter>



	<chapter>
		<title>Développement</title>

		<section>
			<title>Modification &amp; Ajout</title>

			<para>
				Pour le moment le code source d'AIT est héberbé dans SVN du projet Pxxo
			</para>


		</section>

		<section>
			<title>Tests Unitaires</title>

			<para>
				Le développement d'AIT est piloté par les tests uitaires. Pour cela on utilise phpunit.
			</para>
			<example><title>Tester la validé du code</title>

				<screen>
					<prompt>% </prompt><userinput>phpunit AITTest.php</userinput>
					<prompt>% </prompt><userinput>phpunit AITExtentedTest.php</userinput>
				</screen>

			</example>

			<para>
				Bien évidement si l'on ajoute une focntionnalité celle-ci devra posséder
				son propre tests
			</para>

		</section>
	</chapter>


	<chapter>
		<title>Références</title>

		<para> + Documentation de PDO :
			<itemizedlist>
				<listitem>
					<ulink url="http://fr.php.net/manual/fr/book.pdo.php">
						http://fr.php.net/manual/fr/book.pdo.php
					</ulink>
				</listitem>
				<listitem>
					<ulink url="">http://www.phpro.org/tutorials/Introduction-to-PHP-PDO.html
					</ulink>
				</listitem>
			</itemizedlist>
		</para>

		<para>   + Documentation PEAR :
			<itemizedlist>
				<listitem>
					<ulink url="http://pear.php.net/manual/fr/">http://pear.php.net/manual/fr/</ulink>
				</listitem>
			</itemizedlist>
		</para>


	</chapter>

</book>
<!-- Keep this comment at the end of the file
Local variables:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml encoding=utf8
vi: ts=1 sw=1
-->

